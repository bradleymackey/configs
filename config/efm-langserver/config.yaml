---
version: 2
root-markers:
  - package.json
  - RCS/
  - SCCS/
  - CVS/
  - .git/
  - .svn/
  - .hg/
  - .bzr/
  - _darcs/
  - .git
# command define
commands:
  - title: Reload
    command: :reload-config

  - title: Editor
    os: linux
    command: gedit
    # Linux no method generic GUI editor open
    arguments:
      - ${FILENAME}

  - title: Editor
    os: darwin
    command: open
    arguments:
      - "-e"
      - ${FILENAME}

# linter,formatter setting
tools:
  cppcheck-lint: &cppcheck-lint
    lint-command: "cppcheck --quiet --force --enable=style --error-exitcode=1 ${INPUT}"
    lint-stdin: false
    lint-formats:
      - "%f:%l:%c: %m"
    root-markers:
      - compile_commands.json

  markdownlint-lint: &markdownlint-lint
    lint-command: "markdownlint --stdin"
    lint-stdin: true
    lint-formats:
      - "%f:%l:%c MD%n/%*[^ ] %m"
      - "%f:%l MD%n/%*[^ ] %m"
    commands:
      - command: "markdownlint --fix ${INPUT}"
        title: "markdownlint fix"

  jsonlint-lint: &jsonlint-lint
    lint-command: "jsonlint -c"
    lint-stdin: true
    lint-formats:
      - "line %l, col %c, found: %m"

  fixjson-format: &fixjson-format
    format-command: "fixjson"
    format-stdin: true

  shfmt-format: &shfmt-format
    format-command: "shfmt -ln bash -i 2 -bn -ci -sr -kp"
    format-stdin: true

  flake8-lint: &flake8-lint
    lint-command: "flake8 --stdin-display-name ${INPUT} -"
    lint-stdin: true
    lint-formats:
      - "%f:%l:%c: %m"
    root-markers:
      - setup.cfg
      - tox.ini
      - .flake8

  pylint-lint: &pylint-lint
    lint-command: "pylint --output-format=text --reports=no --score=no ${INPUT}"
    lint-stdin: false
    lint-formats:
      - "%f:%l:%c: C%n: %m"
    root-markers:
      - setup.cfg
      - .pylintrc

  yamllint-lint: &yamllint-lint
    lint-command: "yamllint --strict --format parsable ${INPUT}"
    lint-stdin: false
    lint-formats:
      - "%f:%l:%c: [%t%*[a-z]] %m"
    env:
      - "PYTHONIOENCODING=UTF-8"

  rstcheck-lint: &rstcheck-lint
    lint-command: "rstcheck --report warning -"
    lint-stdin: true
    lint-formats:
      - "%f:%l: (%t%*[^/]/%n) %m"

  eslint-lint: &eslint-lint
    lint-command: "eslint_d -f unix --stdin --stdin-filename ${INPUT}"
    lint-ignore-exit-code: true
    lint-stdin: true
    root-markers:
      - package.json
      - .eslintrc.js
      - .eslintrc.yaml
      - .eslintrc.yml
      - .eslintrc.json
    commands:
      - command: "eslint_d -f unix --stdin --fix"
        title: "eslint fix"

  htmllint-lint: &htmllint-lint
    lint-command: "npx --no-install htmllint ${INPUT}"
    lint-stdin: false
    lint-formats:
      - "%f: line %l, col %c, %m"
    root-markers:
      - .htmllintrc

  prettier: &prettier
    format-command: "prettier --stdin-filepath ${INPUT}"
    format-stdin: true

  stylelint-lint: &stylelint-lint
    lint-command: "npx --no-install stylelint --formatter unix --stdin --stdin-filename ${INPUT}"
    lint-ignore-exit-code: false
    lint-stdin: true
    lint-formats:
      - "%f:%l:%c: %m [%t%*[a-z]]"
    root-markers:
      - .stylelintrc.json
    commands:
      - command: "npx --no-install stylelint --fix ${INPUT}"
        title: "stylelint fix"

# languages setting
languages:
  markdown:
    - <<: *markdownlint-lint

  json:
    - <<: *jsonlint-lint
    - <<: *fixjson-format
    - <<: *prettier

  json5:
    - <<: *fixjson-format
    - <<: *prettier

  cpp:
    - <<: *cppcheck-lint

  c:
    - <<: *cppcheck-lint

  sh:
    - <<: *shfmt-format

  yaml:
    - <<: *yamllint-lint
    - <<: *prettier

  javascript:
    - <<: *prettier
    - <<: *eslint-lint

  typescript:
    - <<: *prettier
    - <<: *eslint-lint

  css:
    - <<: *stylelint-lint
    - <<: *prettier

  python:
    - <<: *flake8-lint
    - <<: *pylint-lint

  html:
    - <<: *htmllint-lint
    - <<: *prettier
